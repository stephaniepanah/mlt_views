


--                                      count       minYr   maxYr
-- WL411 Sieve Analysis, Coarse Wash    1754	    1986	2016
-- WL412 Sieve Analysis, Dry             201	    1986	2015
-- WL413 Sieve Analysis, Field Method   8010	    1986	2019




select * from V_WL411_Sieve_Analysis_Coarse_Wash 
 where WL411_sample_ID in
 ( 
   -- examples of most recent samples, using WL640 coarse sieves
   -- for samples using WL640 (>= 2002), the T11 Factor is accurate
   'W-16-0192-SO', 'W-16-0198-SO', 'W-16-0821-AG', 'W-16-0822-AG', 'W-16-0857-AG', 'W-16-0856-AG', 
   'W-15-0191-AG', 'W-15-1049-AG', 'W-15-0999-AG', 'W-14-0269-AG', 'W-14-0280-AG', 'W-14-0510-AC', 
   'W-13-0465-SO', 'W-13-0563-SO', 'W-13-0586-AG', 'W-12-0476-AG', 'W-12-0507-AG', 'W-12-0596-AG'
 )
 order by WL411_sample_year desc, WL411_sample_ID, WL411_segment_nbr
 ;




select * from V_WL411_Sieve_Analysis_pct_passing_grid 
 where sample_id in 
 ( 
   'W-16-0192-SO', 'W-16-0198-SO', 'W-16-0821-AG', 'W-16-0822-AG', 'W-16-0857-AG', 'W-16-0856-AG', 
   'W-15-0191-AG', 'W-15-1049-AG', 'W-15-0999-AG', 'W-14-0269-AG', 'W-14-0280-AG', 'W-14-0510-AC', 
   'W-13-0465-SO', 'W-13-0563-SO', 'W-13-0586-AG', 'W-12-0476-AG', 'W-12-0507-AG', 'W-12-0596-AG'
 )
 ;




----------------------------------------------------------------------------
-- some diagnostics
----------------------------------------------------------------------------


select count(*), min(sample_year), max(sample_year) from Test_WL411 where sample_year not in ('1960','1966');
-- count    minYr   maxYr
-- 1754	    1986	2016



select * from test_wl411 order by sample_year desc, sample_id;



/*----------------------------------------------------------------------

  the query below searches the accounting table (the cross-match between
  a sample and its associated labtests) and produced the following results:
  
  -the earliest appearance of WL640 associated to WL411 is W-02-1420-AG
  -the   latest appearance of DL907 associated to WL411 is W-02-0773-AG
  (there is no crossover time period)
  
  However, there seems to be circular logic regarding DL907. 
  WL411 is dependent upon coarse sieves imported, but I am not seeing 
  any source (but for DL907), and DL907 claims 'Results generated by WL411'
  DL907 is supposed to be a holding recaptacle, good grief
  
  I have not yet resolved calculations dependent upon DL907, and I am not
  sure if I care to, either. In the end, what I am seeing is data (a labtest)
  that was deleted (I think), but the imported data was retained. 
  man, that is so bad
  
  originally, I was not capturing the coarse sieves in WL411, as they 
  should have been imported. I did, in the event that I write SQL for
  the DL907 coarse segments. I thoroughly dislike retaining data that 
  should be imported using a join. If/when I address the DL907-WL411 
  relationship, then I may delete the coarse sieves in WL411.
  awful, just awful

----------------------------------------------------------------------*/

select acct.sample_year, acct.sample_id, acct.labtest 
  from mlt_2_wl901_accounting acct
  
 where acct.sample_id in (select wl411.sample_id from test_wl411 wl411
                           where wl411.sample_id = acct.sample_id)
                           
   and acct.labtest in ('WL411', 'DL907', 'WL640', 'WL642')
   
 order by acct.sample_year, acct.sample_id, acct.labtest 
;



select * from Test_WL411_segments;



select * from mlt_sieve_size;



   select sample_year, count(sample_year) from test_wl411
 group by sample_year
 order by sample_year desc
 ;
/**

2016	  6
2015	 19
2014	 22
2013	 14
2012	 12
2011	 18
2010	 15
2009	 21
2007	 41
2006	 18
2005	 21
2003	 12
2002	 25
2001	 79
2000	102
1999	131
1998	135
1997	 68
1996	117
1995	126
1994	 60
1993	 24
1992	 14
1991	 47
1990	 64
1989	 97
1988	192
1987	214
1986	 40
1960	 1

**/



select customary_metric, count(customary_metric) from test_wl411
 group by customary_metric
 order by customary_metric
 ;
 /**
 ' ' 	1434
 C	    303
 M	    18
 **/



-- find headers without segments
select hdr.sample_id from test_wl411 hdr
 where hdr.sample_id not in (select seg.sample_id from test_wl411_segments seg
                              where seg.sample_id = hdr.sample_id)
;
-- 76 samples without segments



-- find segments without headers (none should be found)
select seg.sample_id from test_wl411_segments seg
 where seg.sample_id not in (select hdr.sample_id from test_wl411 hdr
                              where hdr.sample_id = seg.sample_id)
;
-- none found




/***********************************************************************************

  WL411 Sieve Analysis, Coarse Wash
  
  from MTest, Lt_WL411_BC.cpp, void LtWL411_BC::CorGrpRoot::doCalcs() {
  
  T-11 factor (1-24-03 JCU)
  T11 = (%p#4(RAW) - %p200) / (wtWashed#4- - wtP200)
  
    %p#4: CPAN / CTOT  (use Coarse NOT fine %passing #4)
   %p200: wtP200 / PRE
  wtP200: washedout + fPan
  denominator: wt of sieved fines, excluding washedout and fpan
 
  2016-4: 
  It appears that the numerator is the % passing #4, adjusted by subtracting the % #200-
  This is the %passing #4 if no fines clung to larger particles
  The numerator is the total weight retained in the fine sieves
  
  This is divided this into the numerator because the numerator only applies to the those sieves: 
  the result is a number that can be applied to each fine sieve values: 
  after this application the sum of the weights to which the factor has 
  been applied will equal the denominator and so will effectively cancel out
  
  T11 appears to have built into it: 
  adjustment of the split to the raw sample size, and
  adjustment of wt retained to pct retained, and
  adjustment for clinging fines  
                                                // my notes
  csumret     += rawTblVals[xr].val;            // total mass of coarse sieves
  cpan         = rawFines;                      // the Fines
  csumret     += cpan;                          // total coarse + the Fines, total mass
  cpartpan     = cpan / csumret;                // rawFines / total mass (fines as a pct of total)
  
                                                // portion retained on each cse sieve
  cpartret[xr] = rawTblVals[xr].val / csumret;  // coarse sieve[xr] mass / total mass
  target       = &preWash;                      // "Mass before wash"
  target       = &postWash;                     // "Mass after wash"
  target       = &fpan;                         // "Fine pan (#200-)" -- fpan is Pan
  washedout    = preWash - postWash;            // 
  p200         = fpan + washedout;              // (Pan + preWash - postWash)
  
  fsvsret = 0.0;                                // sum of fine wts excluding #200- (the Pan)
  if (fineTblVals[xr].val > 0.0)
      fsvsret += fineTblVals[xr].val;
  
  T11 = (cpartpan - p200 / preWash) / fsvsret;  // 
  
  -----------------------------------------------------------------
 
  CustomaryOrMetric
  W-16-0192-SO |C| Sieve Units - Customary
  W-07-0163-AG |M| Sieve Units - Metric
                    
***********************************************************************************/


create or replace view V_WL411_Sieve_Analysis_Coarse_Wash as 

with summation_sql as (
     select  sample_id as sample_id
            ,sum(case when mass_retained >= 0 then mass_retained else 0 end) as mass_ret_summation
       from Test_WL411_segments
      where sieve_type = 'Fine' 
      group by sample_id 
)

,cumulative_sql as (

     select  sample_id   as sample_id
            ,segment_nbr as segment_nbr
             
            ,sum(case when mass_retained >= 0 then mass_retained else 0 end) 
                 over (partition by sample_id order by sample_id, segment_nbr) as mass_ret_cumulative

       from Test_WL411_segments
      where sieve_type = 'Fine' 
      order by sample_id, segment_nbr
)

,v_wl640 as (
    
         select  WL640_Sample_ID
                ,WL640_mass_of_fines
                ,WL640_Mass_Total
                ,WL640_mass_retained_summ_coarse -- not displayed in WL641
                
                ,case when WL640_PCT_PASSING_NBR4 > 0 then WL640_PCT_PASSING_NBR4 else 0 end 
                 as WL640_pct_pass_nbr4
             
           from  V_WL640_Prep_Raw_Gradation
          where  WL640_segment_nbr = 1
)

--------------------------------------------------
--  main sql
--------------------------------------------------

select  wl411.sample_id                        as WL411_Sample_ID
       ,wl411.sample_year                      as WL411_Sample_Year
       
       ,wl411.test_status                      as WL411_Test_Status
       ,wl411.tested_by                        as WL411_Tested_by
       
       ,case when to_char(wl411.date_tested, 'yyyy') = '1959' then ' '
             else to_char(wl411.date_tested, 'mm/dd/yyyy')
             end                               as WL411_date_tested
            
       ,wl411.date_tested                        as WL411_date_tested_DATE
       ,wl411.date_tested_orig                   as WL411_date_tested_orig
       
       ,wl411.customary_metric                 as WL411_customary_metric -- for sieve units, but, I think are not used
        
       /*----------------------------------------------------
         Batched sample
       ----------------------------------------------------*/
       
       ,case when wl411.mass_dry_before_wash >= 0 then wl411.mass_dry_before_wash else -1  end as WL411_mass_dry_before_wash
       ,case when wl411.mass_dry_after_wash  >= 0 then wl411.mass_dry_after_wash  else -1  end as WL411_mass_dry_after_wash
       ,case when wl411.mass_nbr4_minus      >= 0 then wl411.mass_nbr4_minus      else -1  end as WL411_mass_nbr4_minus
       ,case when wl411.mass_pan             >= 0 then wl411.mass_pan             else -1  end as WL411_mass_pan
       
       /*-------------------------------------------------------
         segments
       -------------------------------------------------------*/
       
       ,case when wl411seg.segment_nbr   is not null then wl411seg.segment_nbr    else  -1 end as WL411_segment_nbr
       ,case when wl411seg.sieve_size    is not null then wl411seg.sieve_size     else ' ' end as WL411_sieve_size
       ,case when wl411seg.mass_retained is not null then wl411seg.mass_retained  else  -1 end as WL411_mass_retained
       ,case when wl411seg.sieve_type    is not null then wl411seg.sieve_type     else ' ' end as WL411_sieve_type
       
       ,case when cumulative_sql.mass_ret_cumulative is not null then cumulative_sql.mass_ret_cumulative else -1 end 
        as WL411_mass_ret_cumulative_fine
        
       ,case when summation_sql.mass_ret_summation   is not null then summation_sql.mass_ret_summation   else -1 end
        as WL411_mass_ret_summation_fine
        
       ,round(T11_Factor,5)              as WL411_T11_Factor
       ,T11_factor_captured              as WL411_T11_Factor_captured -- for comparison, not used
       
       /*-------------------------------------------------------
         WL640 values
       -------------------------------------------------------*/
       
       ,case when v_wl640.WL640_mass_of_fines             is not null then v_wl640.WL640_mass_of_fines             else -1 end
        as WL640_mass_of_fines
        
       ,case when v_wl640.WL640_Mass_Total                is not null then v_wl640.WL640_Mass_Total                else -1 end
        as WL640_Mass_Total
        
       ,case when v_wl640.WL640_mass_retained_summ_coarse is not null then v_wl640.WL640_mass_retained_summ_coarse else -1 end
        as WL640_summ_coarse       
       
       ,case when v_wl640.WL640_pct_pass_nbr4             is not null then v_wl640.WL640_pct_pass_nbr4             else -1 end
        as WL640_pct_pass_nbr4
       
       ,wl411.remarks as WL411_Remarks
       
  /*----------------------------------------------------------------------------
    table relationships
  ----------------------------------------------------------------------------*/
       
  from MLT_1_Sample_WL900                    smpl
  join Test_WL411                           wl411 on wl411.sample_id      = smpl.sample_id
  
  left join Test_WL411_segments          wl411seg on wl411.sample_id      = wl411seg.sample_id
  
  left join summation_sql                         on wl411seg.sample_id   = summation_sql.sample_id
  
  left join cumulative_sql                        on wl411seg.sample_id   = cumulative_sql.sample_id
                                                 and wl411seg.segment_nbr = cumulative_sql.segment_nbr
                                                 
  left join v_wl640                               on wl411.sample_id      = v_wl640.WL640_Sample_ID
  
  /*----------------------------------------------------------------------------
    T-11 Factor = (cpartpan - (p200 / preWash)) / fsvsret;
    
    the T-11 Factor is used in calculating the percent passing for fine sieves
    the calculations are accurate when WL640_PCT_Fines are present
    
       cpartpan = (wl640 raw Fines / wl640 total mass) 
                  WL640_PCT_PASSING_NBR4
                  
           p200 = (Pan            + preWash                    - postWash)
                  (wl411.mass_pan + wl411.mass_dry_before_wash - wl411.mass_dry_after_wash)
                  
        fsvsret = sum of fine wts excluding #200- (excluding the Pan)
                  summation_sql.mass_ret_summation
  ----------------------------------------------------------------------------*/
  
  cross apply (select case when v_wl640.WL640_pct_pass_nbr4       > 0 and 
                                wl411.mass_pan                    > 0 and 
                                wl411.mass_dry_before_wash        > 0 and 
                                wl411.mass_dry_after_wash         > 0 and 
                                summation_sql.mass_ret_summation  > 0 
                                
                           then ( ((v_wl640.WL640_pct_pass_nbr4 * 0.01) -
                                    ((wl411.mass_pan + wl411.mass_dry_before_wash - wl411.mass_dry_after_wash) / wl411.mass_dry_before_wash)    
                                  )
                                  / summation_sql.mass_ret_summation 
                                ) * 100
                                   
                           else -1 end as T11_Factor from dual) T11factor
  
  order by 
  wl411.sample_id, 
  wl411seg.segment_nbr
  ;









/***********************************************************************************
  
  V_WL411_Sieve_Analysis_pct_passing_grid
  
  
      // convert all to % passing
      // coarse sieves in raw sample
      oldval = 1.0;
      xpp = 0;

      for( xr = 0; xr < ncse; ++xr )
	  {
         gradVals[xpp].sv = rawTblVals[xr].sv; // sieve size
         oldval -= cpartret[xr];               // cpartret[xr] = rawTblVals[xr].val / csumret; (total mass of sieves, not just coarse)
         gradVals[xpp].val = 100.0*oldval;     // .val: value is actually pp
         ++xpp;
      }

      // fine
	  // at this point, oldval is pct passing #4
      for( xr = 0; xr < nfin; ++xr )
	  {
         // fine wts retained to portions retained
         fpartret = ( fineTblVals[xr].val > 0.0 )? fineTblVals[xr].val*T11 : 0.0;
         
         // fine % passing
         oldval -= fpartret;
         gradVals[xpp].val = 100.0*oldval;
         gradVals[xpp].sv = fineTblVals[xr].sv;
         ++xpp;
      }
      
      p200 *= 100.0 / preWash; // I have not bothered with this check
      oldval *= 100.0;
      // #200- +/-0.1% range check. Assume that the last sieve is #200
      if( oldval < p200*0.999 || oldval > p200*1.001 )
	  {
         sprintf(pmsg, fmtbadchk2, p200, oldval);
         pmsg += strlen(pmsg);
         goto atend;
      }
  
***********************************************************************************/



create or replace view V_WL411_Sieve_Analysis_pct_passing_grid as 

select sample_id
       ,groupnbr
       ,segment_nbr
       ,sieve_size
       ,pct_passing
       ,mass_retained
       ,mass_ret_cumulative
       ,mass_total
       ,pct_pass_nbr4
       ,sieve_type
       ,WL411_T11_Factor
       
  from (
         with cumulative_sql as (
         
              select  WL411_Sample_ID   as sample_id
                     ,WL411_segment_nbr as segment_nbr
                     ,sum(case when WL411_mass_retained >= 0 then WL411_mass_retained else 0 end) 
                          over (partition by WL411_Sample_ID order by WL411_Sample_ID, WL411_segment_nbr)
                          as mass_ret_cumulative
                          
                from V_WL411_Sieve_Analysis_Coarse_Wash
               where WL411_sieve_type = 'Fine'
               order by WL411_Sample_ID, WL411_segment_nbr
         )
         select  v_wl411.wl411_sample_id                       as sample_id
                ,2                                             as groupnbr
                ,v_wl411.wl411_segment_nbr                     as segment_nbr
                ,v_wl411.wl411_sieve_size                      as sieve_size
                
                ,round(v_wl411.WL640_pct_pass_nbr4 - (cumulative_sql.mass_ret_cumulative * v_wl411.WL411_T11_Factor),2)
                                                               as pct_passing
                
                ,v_wl411.wl411_mass_retained                   as mass_retained               
                ,cumulative_sql.mass_ret_cumulative            as mass_ret_cumulative
                ,-1                                            as mass_total -- n/a to fine
                ,v_wl411.WL640_pct_pass_nbr4                   as pct_pass_nbr4
                ,v_wl411.WL411_sieve_type                      as sieve_type
                ,v_wl411.WL411_T11_Factor                      as WL411_T11_Factor
                
           from MLT_1_Sample_WL900                        smpl
           join V_WL411_Sieve_Analysis_Coarse_Wash     v_wl411 on v_wl411.wl411_sample_id   = smpl.sample_id
          
           join cumulative_sql                                 on v_wl411.wl411_sample_id   = cumulative_sql.sample_id
                                                              and v_wl411.wl411_segment_nbr = cumulative_sql.segment_nbr
          
          where v_wl411.WL411_sieve_type = 'Fine'
         
         union
         
         select  v_wl640.WL640_Sample_ID                       as sample_id
                ,1                                             as groupnbr
                ,v_wl640.wl640_segment_nbr                     as segment_nbr
                ,v_wl640.wl640_sieve_size                      as sieve_size
                
                ,round((100 - ((v_wl640.WL640_mass_retained_cumulative / v_wl640.WL640_Mass_Total) * 100)),2) -- oldval
                                                               as pct_passing
                                                              
                ,v_wl640.WL640_mass_retained                   as mass_retained
                ,v_wl640.WL640_mass_retained_cumulative        as mass_ret_cumulative
                ,v_wl640.WL640_Mass_Total                      as mass_total
                ,v_wl640.WL640_pct_passing_nbr4                as pct_pass_nbr4
                ,v_wl640.WL640_sieve_type                      as sieve_type
                ,-1                                            as WL411_T11_Factor -- n/a to coarse
               
           from MLT_1_Sample_WL900                        smpl
           join V_WL640_Prep_Raw_Gradation             v_wl640 on v_wl640.WL640_Sample_ID = smpl.sample_id 
  )
 
 order by 1, 2, 3
 ;
 
 
 
 
 
 
 
 
 